# Slack Notifier — example configuration (SDK-based)
# Copy this file to `config.yaml` and edit values as needed.
# This config is intended for use with `slack_notifier_sdk.py` (uses slack-sdk WebClient).
# Prefer using a Bot Token (xoxb-...) stored here or via the SLACK_BOT_TOKEN env var.

# -----------------------------------------------------------------------------
# Authentication
# -----------------------------------------------------------------------------
# Provide a Bot Token (xoxb-...) OR set SLACK_BOT_TOKEN in the environment.
# Keep tokens secret — do NOT commit real tokens to git.
# Example (uncomment & replace):
# token: "xoxb-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
# Alternative legacy alias:
# slack_bot_token: "xoxb-..."  # treated the same as `token`

# -----------------------------------------------------------------------------
# Defaults
# -----------------------------------------------------------------------------
# Default channel to post to. Can be a name ("#general") or an ID ("C12345678").
# CLI --channel overrides this setting.
# Example:
# channel: "#alerts"
# default_channel: "#alerts"  # alias, used by some scripts

# -----------------------------------------------------------------------------
# Behaviour flags
# -----------------------------------------------------------------------------
# Booleans: set to true/false (no quotes)
make_public: false        # Try to create public permalinks for uploaded files
verbose: false            # Emit verbose debug logging to stderr
dry_run: false            # Simulate actions without contacting Slack
verify_tls: true          # Verify TLS certificates (set false only for testing)
insecure: false           # Alias for verify_tls=false (CLI parsing can invert behavior)

# If you need to point to a specific CA bundle instead of system defaults,
# specify a PEM file path here (preferred over disabling TLS verification):
# ca_file: "/path/to/ca-bundle.pem"
# ssl_cert_file: "/path/to/ca-bundle.pem"  # legacy alias

# -----------------------------------------------------------------------------
# Template support (NEW)
# -----------------------------------------------------------------------------
# Puedes definir un template por defecto y variables para sustituir placeholders.
# Los templates se buscan en la carpeta `templates/` junto al script si sólo pasas el nombre
# (sin extensión). También puedes pasar una ruta absoluta/relativa.
# Placeholders soportados automáticamente: {{TITLE}}, {{MESSAGE}}, {{STATUS}}, {{ICON}}
# Además puedes definir tus propias variables en `template_vars` y sobre-escribirlas
# vía CLI con --var KEY=VAL.
# Ejemplo de configuración:
# template: "simple"         # Usará templates/simple.json
# template_vars:
#   EXTRA_INFO: "Build #42"
#   SERVICE: "payments"
# Luego en el template puedes usar {{EXTRA_INFO}} y {{SERVICE}}.
# En CLI puedes sobre-escribir: --var SERVICE=checkout --var EXTRA_INFO="Build #43"

# template: "simple"
# template_vars:
#   SERVICE: "example-service"
#   EXTRA_INFO: "Build #123"

# -----------------------------------------------------------------------------
# Notes & guidance
# -----------------------------------------------------------------------------
# - The notifier always uses `files_upload_v2` (no fallback to older APIs).
# - CLI flags have precedence over values in this file.
# - Environment variable fallbacks:
#     SLACK_BOT_TOKEN  -> token/slack_bot_token
#     SLACK_CHANNEL    -> channel/default_channel
#     REQUESTS_CA_BUNDLE / SSL_CERT_FILE -> used if set; config.ca_file overrides them
# - For testing, set `dry_run: true` to avoid network calls and see simulated output.
# - Para usar un template sin archivos adjuntos:
#     python slack_notifier_sdk.py -t "Deploy completado" -s success --template simple --channel C123...
# - Para usarlo con archivos:
#     python slack_notifier_sdk.py -t "Resultados Test" -m "Se adjuntan reportes" --files report.txt coverage.xml \
#        --template workflow_success --var EXTRA_INFO="Job nightly" --channel C123...

# -----------------------------------------------------------------------------
# Minimal example you can copy/paste (remove the leading "# " and fill values)
# -----------------------------------------------------------------------------
# token: "xoxb-xxxxxxxxxxxxxxxxxxxx"
# channel: "#my-channel"
# make_public: false
# verbose: false
# dry_run: false
# verify_tls: true
# ca_file: "/etc/ssl/certs/ca-bundle.crt"
# template: "workflow_failure"
# template_vars:
#   SERVICE: "orders"
#   EXTRA_INFO: "Commit {{GIT_SHA}}"   # Puedes combinar con --var GIT_SHA=abcd1234

# -----------------------------------------------------------------------------
# End of example
# -----------------------------------------------------------------------------
